//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input/Controller.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controller : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controller()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controller"",
    ""maps"": [
        {
            ""name"": ""PC"",
            ""id"": ""1da3df77-59f5-4bc7-91c4-371c81daf16e"",
            ""actions"": [
                {
                    ""name"": ""LineOne"",
                    ""type"": ""Value"",
                    ""id"": ""2cfef833-7edc-412b-9c89-2542a5b7d0f9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LineTwo"",
                    ""type"": ""Button"",
                    ""id"": ""0d45784f-a4db-4a4b-b30e-7939c7f4d074"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LineThree"",
                    ""type"": ""Button"",
                    ""id"": ""95c6b8bf-50cd-4ef9-88a0-1fe60ef77834"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LineFour"",
                    ""type"": ""Button"",
                    ""id"": ""b4a4713f-9219-4379-aad7-a5abb8ec9367"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenPauseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""cbbf2b70-2265-49cc-9649-c8fadb2efe92"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5dcbe6b3-2a05-4596-89da-ec28c8db4f5b"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LineOne"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b586ba8a-e13b-482e-867a-f947db02a160"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LineTwo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59ce9072-109f-4c40-8216-c96a316551d3"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LineThree"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9317f8f8-8b91-4986-99f1-a4bf366df4aa"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LineFour"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""46326859-056d-473a-9062-e886f045e0f3"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenPauseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PC
        m_PC = asset.FindActionMap("PC", throwIfNotFound: true);
        m_PC_LineOne = m_PC.FindAction("LineOne", throwIfNotFound: true);
        m_PC_LineTwo = m_PC.FindAction("LineTwo", throwIfNotFound: true);
        m_PC_LineThree = m_PC.FindAction("LineThree", throwIfNotFound: true);
        m_PC_LineFour = m_PC.FindAction("LineFour", throwIfNotFound: true);
        m_PC_OpenPauseMenu = m_PC.FindAction("OpenPauseMenu", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PC
    private readonly InputActionMap m_PC;
    private IPCActions m_PCActionsCallbackInterface;
    private readonly InputAction m_PC_LineOne;
    private readonly InputAction m_PC_LineTwo;
    private readonly InputAction m_PC_LineThree;
    private readonly InputAction m_PC_LineFour;
    private readonly InputAction m_PC_OpenPauseMenu;
    public struct PCActions
    {
        private @Controller m_Wrapper;
        public PCActions(@Controller wrapper) { m_Wrapper = wrapper; }
        public InputAction @LineOne => m_Wrapper.m_PC_LineOne;
        public InputAction @LineTwo => m_Wrapper.m_PC_LineTwo;
        public InputAction @LineThree => m_Wrapper.m_PC_LineThree;
        public InputAction @LineFour => m_Wrapper.m_PC_LineFour;
        public InputAction @OpenPauseMenu => m_Wrapper.m_PC_OpenPauseMenu;
        public InputActionMap Get() { return m_Wrapper.m_PC; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PCActions set) { return set.Get(); }
        public void SetCallbacks(IPCActions instance)
        {
            if (m_Wrapper.m_PCActionsCallbackInterface != null)
            {
                @LineOne.started -= m_Wrapper.m_PCActionsCallbackInterface.OnLineOne;
                @LineOne.performed -= m_Wrapper.m_PCActionsCallbackInterface.OnLineOne;
                @LineOne.canceled -= m_Wrapper.m_PCActionsCallbackInterface.OnLineOne;
                @LineTwo.started -= m_Wrapper.m_PCActionsCallbackInterface.OnLineTwo;
                @LineTwo.performed -= m_Wrapper.m_PCActionsCallbackInterface.OnLineTwo;
                @LineTwo.canceled -= m_Wrapper.m_PCActionsCallbackInterface.OnLineTwo;
                @LineThree.started -= m_Wrapper.m_PCActionsCallbackInterface.OnLineThree;
                @LineThree.performed -= m_Wrapper.m_PCActionsCallbackInterface.OnLineThree;
                @LineThree.canceled -= m_Wrapper.m_PCActionsCallbackInterface.OnLineThree;
                @LineFour.started -= m_Wrapper.m_PCActionsCallbackInterface.OnLineFour;
                @LineFour.performed -= m_Wrapper.m_PCActionsCallbackInterface.OnLineFour;
                @LineFour.canceled -= m_Wrapper.m_PCActionsCallbackInterface.OnLineFour;
                @OpenPauseMenu.started -= m_Wrapper.m_PCActionsCallbackInterface.OnOpenPauseMenu;
                @OpenPauseMenu.performed -= m_Wrapper.m_PCActionsCallbackInterface.OnOpenPauseMenu;
                @OpenPauseMenu.canceled -= m_Wrapper.m_PCActionsCallbackInterface.OnOpenPauseMenu;
            }
            m_Wrapper.m_PCActionsCallbackInterface = instance;
            if (instance != null)
            {
                @LineOne.started += instance.OnLineOne;
                @LineOne.performed += instance.OnLineOne;
                @LineOne.canceled += instance.OnLineOne;
                @LineTwo.started += instance.OnLineTwo;
                @LineTwo.performed += instance.OnLineTwo;
                @LineTwo.canceled += instance.OnLineTwo;
                @LineThree.started += instance.OnLineThree;
                @LineThree.performed += instance.OnLineThree;
                @LineThree.canceled += instance.OnLineThree;
                @LineFour.started += instance.OnLineFour;
                @LineFour.performed += instance.OnLineFour;
                @LineFour.canceled += instance.OnLineFour;
                @OpenPauseMenu.started += instance.OnOpenPauseMenu;
                @OpenPauseMenu.performed += instance.OnOpenPauseMenu;
                @OpenPauseMenu.canceled += instance.OnOpenPauseMenu;
            }
        }
    }
    public PCActions @PC => new PCActions(this);
    public interface IPCActions
    {
        void OnLineOne(InputAction.CallbackContext context);
        void OnLineTwo(InputAction.CallbackContext context);
        void OnLineThree(InputAction.CallbackContext context);
        void OnLineFour(InputAction.CallbackContext context);
        void OnOpenPauseMenu(InputAction.CallbackContext context);
    }
}
